<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"  
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
   <http pattern="/css/**" security="none"></http>   
   <http pattern="/images/**" security="none"></http>
   <http pattern="/scripts/**" security="none"></http>
   <http pattern="/system/resources/**" security="none"></http>
   <http pattern="/front/**" security="none"/>
   <http pattern="/back/**" security="none"/>
   <http pattern="/common/user.do" security="none"/>
   <http auto-config="true" use-expressions="true">
     <form-login login-page="/common/user.do"  default-target-url="/system/sysManage.do"/>
      <!--   
         error-if-maximum-exceeded 后登陆的账号会挤掉第一次登陆的账号   
         session-fixation-protection  防止伪造sessionid攻击,用户登录成功后会销毁用户当前的session。  
    -->  
    <!-- <session-management invalid-session-url="/user/timedout" session-fixation-protection="none">  
        <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>  
    </session-management> -->
     <custom-filter ref="myFilterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
   </http>
   <!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider
            user-service-ref="myUserDetailsServiceImpl">
                <!-- <password-encoder hash="md5" /> -->
        </authentication-provider>
    </authentication-manager>
     <!-- 配置过滤器 -->  
    <beans:bean id="myFilterSecurityInterceptor" class="com.product.sys.security.MyFilterSecurityInterceptor">  
        <!-- 用户是否拥有所请求资源的权限 -->  
        <beans:property name="accessDecisionManager" ref="myAccessDescisionManager" />  
        <!-- 资源与权限对应关系 -->  
        <beans:property name="fisMetadataSource" ref="mySecurityMetadataSource" />  
        <!-- 用户拥有的权限 -->  
        <beans:property name="authenticationManager" ref="authenticationManager" /> 
    </beans:bean>  
    <beans:bean id="mySecurityMetadataSource" class="com.product.sys.security.MySecurityMetadataSource">
    	<beans:constructor-arg name="resourceMapper" ref="resourceMapper"></beans:constructor-arg>
    	<beans:constructor-arg name="roleMapper" ref="roleMapper"></beans:constructor-arg>
    </beans:bean>
    <beans:bean id="myAccessDescisionManager" class="com.product.sys.security.MyAccessDescisionManager"></beans:bean>
<!--    <authentication-manager>
    <authentication-provider>
     <user-service>
      <user name="user" password="user" authorities="ROLE_USER"/>
     </user-service>
    </authentication-provider>
   </authentication-manager> -->
  
   <!-- <http auto-config="true"  
        use-expressions="true"   
        access-denied-page="/user/denied">
    
    default-target-url       指定了从登录页面登录后进行跳转的页面  
    always-use-default-target   true表示登录成功后强制跳转  
    authentication-failure-url  表示验证失败后进入的页面  
    login-processing-url       设置验证登录验证地址，如果不设置，默认是j_spring_security_check  
    username-parameter,password-parameter     设置登录用户名和密码的请求name，默认：j_username,j_password  
    default-target-url="/user/home"   
    
    <form-login login-page="/system/login.do"  
                always-use-default-target="true"  
                authentication-failure-url="/user/login?error=1"  
                login-processing-url="/sys/loginCheck.do"  
                authentication-success-handler-ref="successHandler"/>  
     <remember-me /> 
    <intercept-url pattern="/system/sysManage.do" access="hasRole('ROLE_USER')"/>  
    <intercept-url pattern="/system/sysManage.do" access="hasRole('ROLE_ADMIN')"/>  
      
    <logout logout-url="/logout" logout-success-url="/user/login"/>  
      
         error-if-maximum-exceeded 后登陆的账号会挤掉第一次登陆的账号   
         session-fixation-protection  防止伪造sessionid攻击,用户登录成功后会销毁用户当前的session。  
     
    <session-management invalid-session-url="/user/timedout" session-fixation-protection="none">  
        <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>  
    </session-management>  
    <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>  
  </http>  
    
  <authentication-manager alias="authManager">  
    <authentication-provider user-service-ref="userServiceDetail">  
        <jdbc-user-service data-source-ref="dataSource"   
                            authorities-by-username-query=""  
                            group-authorities-by-username-query=""/>  
        <password-encoder hash="md5">  
            <salt-source user-property="username"/>   盐值  [添加这个属性后，加密密码明文为:"密码明文{盐值}"]  
        </password-encoder>  
          
    </authentication-provider>  
  </authentication-manager>   -->
	
</beans:beans>